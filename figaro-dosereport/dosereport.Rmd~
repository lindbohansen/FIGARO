---
title: "FIGARO dosereport"
author: ""
date: "`r date()`"
output: 
  html_document:
    dpi: 300
    fig_caption: yes
    fig_width: 10
params:
   inFullPath: ""
---

```{r setup, eval=TRUE, include=FALSE}
library(knitr)
library(tidyverse)
library(forcats)
library(stringr)
library(limSolve)
library(glmnet)
```

```{r run-this-file, eval=FALSE, include=FALSE}

### run with: Rscript -e "date=date() ; rmarkdown::render('dosereport.Rmd',params=list(inFullPath='/home/elhansen/FIGARO/figaro-dosereport'))"

```

When you use this report or results from this report in your work, please credit: 

E.L. Hansen et al. (2018). Dosimetry at the FIGARO irradiation facility.

```{r in, eval=TRUE, include=FALSE}

Co60halflifeindays=1925.20

sourcedistanceoffsetcm=41.7

# modify to read from file specified as input to running of script
ssdl=read_csv("ssdl_2013.csv")
ssdl=filter(ssdl,Xcm==0,Ycm==78)
varx=ssdl$Zcm
logvarx=log(ssdl$Zcm)
logvary=log(ssdl$airKermaRatemGyperh)
ssdlmodel=lm(logvary~logvarx+varx)

projectinfo=read_csv("project-info.csv")
projectpeople=read_csv("project-people.csv")

setupmaster=read_csv("setup-master.csv")
setuptypes=read_csv("setup-types.csv")
setuprotations=read_csv("setup-rotations.csv")
setuppositions=read_csv("setup-positions.csv")

nanodotmaster=read_csv("nanodot-master.csv")
nanodotrotations=read_csv("nanodot-rotations.csv")
# nanodots borrow types from setup
# nanodots borrow positions from setup
nanodotpoints=read_csv("nanodot-points.csv")
nanodotplanes=read_csv("nanodot-planes.csv")
nanodotreadings=read_csv("nanodot-readings.csv")

airkermaratesup=read_csv("airkermarates-on-reference-dates-up.csv")
airkermaratesdown=read_csv("airkermarates-on-reference-dates-down.csv")

absorbeddoserates=read_csv("absorbed-doserates-on-reference-dates.csv")

setuprotations=ungroup(summarise(group_by(mutate(setuprotations,exposuretime=exposurestop-exposurestart),rotation),rotationstart=min(exposurestart),rotationstop=max(exposurestop),rotationtime=sum(exposuretime)))

fullsetupmaster=inner_join(setupmaster,setuptypes)
fullsetupmaster=inner_join(fullsetupmaster,setuprotations)
fullsetupmaster=inner_join(fullsetupmaster,setuppositions)
fullsetupmaster=inner_join(fullsetupmaster,absorbeddoserates)

fullsetupmaster=mutate(fullsetupmaster,ssdlAxisAirKermaRatemGyperh=(exp(ssdlmodel$coefficients[1]+ssdlmodel$coefficients[2]*log(Zcm)+ssdlmodel$coefficients[3]*Zcm)*(2^(-(as.numeric(min(fullsetupmaster$rotationstart)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays)+2^(-(as.numeric(max(fullsetupmaster$rotationstop)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays))/2))

#fullsetupmaster=mutate(fullsetupmaster,ssdlAxisAirKermaRatemGyperh=(exp(ssdlmodel$coefficients[1]+ssdlmodel$coefficients[2]*log(Zcm)+ssdlmodel$coefficients[3]*Zcm)*(2^(-(as.numeric(rotationstart-mean(ssdl$refdate),unit="days"))/Co60halflifeindays)+2^(-(as.numeric(rotationstop-mean(ssdl$refdate),unit="days"))/Co60halflifeindays))/2))

fullsetupmaster=mutate(fullsetupmaster,wholesetupAbsorbedDoseRatemGyperh=(wholesetupAbsorbedDoseRatemGyperh)*(2^(-(as.numeric(rotationstart-absorbedDoseRateRefDate,unit="days"))/Co60halflifeindays)+2^(-(as.numeric(rotationstop-absorbedDoseRateRefDate,unit="days"))/Co60halflifeindays))/2)

fullsetupmaster=mutate(fullsetupmaster,wholesetupAbsorbedDoseGy=wholesetupAbsorbedDoseRatemGyperh*as.numeric(rotationtime,unit="hours")/1e3)

fullsetupmaster=mutate(fullsetupmaster,left=Xcm-xcm/2,right=Xcm+xcm/2)
fullsetupmaster=mutate(fullsetupmaster,bottom=Ycm,top=Ycm+ycm)
fullsetupmaster=mutate(fullsetupmaster,front=Zcm,back=Zcm+zcm)

nanodotrotations=ungroup(summarise(group_by(mutate(nanodotrotations,exposuretime=exposurestop-exposurestart),rotation),rotationstart=min(exposurestart),rotationstop=max(exposurestop),rotationtime=sum(exposuretime)))

fullnanodotmaster=inner_join(nanodotmaster,nanodotrotations)
fullnanodotmaster=inner_join(fullnanodotmaster,setuppositions)
fullnanodotmaster=inner_join(fullnanodotmaster,nanodotpoints)
fullnanodotmaster=inner_join(fullnanodotmaster,nanodotplanes)
fullnanodotmaster=inner_join(fullnanodotmaster,nanodotreadings)

### TODO to verify nanodotmaster

fullnanodotmaster=mutate(fullnanodotmaster,readingrate=((postExposureReading-preExposureReading)/as.numeric(rotationtime,units="hours")))

fullnanodotmaster=mutate(fullnanodotmaster,ssdlAxisAirKermaRatemGyperh=(exp(ssdlmodel$coefficients[1]+ssdlmodel$coefficients[2]*log(Zcm)+ssdlmodel$coefficients[3]*Zcm)*(2^(-(as.numeric(min(fullnanodotmaster$rotationstart)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays)+2^(-(as.numeric(max(fullnanodotmaster$rotationstop)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays))/2))

airkermaratesup=mutate(airkermaratesup,wkerma=(wkerma*(2^(-(as.numeric(min(fullnanodotmaster$rotationstart)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays)+2^(-(as.numeric(max(fullnanodotmaster$rotationstop)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays))/2))

airkermaratesdown=mutate(airkermaratesdown,wkerma=(wkerma*(2^(-(as.numeric(min(fullnanodotmaster$rotationstart)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays)+2^(-(as.numeric(max(fullnanodotmaster$rotationstop)-mean(ssdl$refdate),unit="days"))/Co60halflifeindays))/2))


```

# `r projectinfo$title`
`r projectinfo$description`

Exposures started `r format(min(fullsetupmaster$rotationstart),tz="CET")` and ended `r format(max(fullsetupmaster$rotationstop),tz="CET")`.

### Participants

The following people participated in this project:

```{r people, eval=TRUE, echo=FALSE}

kable(projectpeople)

```

### Types of setups

The project used the following types of setups, where xcm refers to the width of the setup in the direction going outwards from the door; ycm refers to the height of the setup in the direction going upwards from the floor; and zcm refers to the depth of the setup along the central field axis going outwards from the source towards the back wall:

```{r types, eval=TRUE, echo=FALSE}

kable(select(count(fullsetupmaster,type,xcm,ycm,zcm,approximateshape,actualshape,materials),type,xcm,ycm,zcm,approximateshape,actualshape,materials))

```

### Positions

Setups were placed at the following positions in the field (see figure below), where Xcm refers to the distance from the central field axis to the midpoint of the setup in the direction going outwards from the door; Ycm refers to the distance from the floor to the lowest point of the setup in the direction going upwards from the floor; and Zcm refers to the distance from the source focus to the front face of the setup in the direction going outwards from the source towards the backwall (this distance equals the distance from the exit face of the collimator to the setup front face plus `r sourcedistanceoffsetcm` cm). SSDL-defined field axis air kerma rates list the mean of air kerma rates free in air on the SSDL-defined field axis at the specified distances of Zcm to the source focus on the exposure start (`r format(min(fullsetupmaster$rotationstart),tz="CET")`) and end (`r format(max(fullsetupmaster$rotationstop),tz="CET")`) dates. Note that these are mean air kerma rates on the SSDL-defined field axis. Setups that are placed closer to the central field axis may receive slightly higher mean air kerma rates. Setups that are placed farther away from the central field axis than the SSDL-defined field axis, will generally receive lower mean air kerma rates.

```{r positions, eval=TRUE, echo=FALSE}

output=count(fullsetupmaster,type,position,Xcm,Ycm,Zcm,ssdlAxisAirKermaRatemGyperh)
output$ssdlAxisAirKermaRatemGyperh=formatC(signif(output$ssdlAxisAirKermaRatemGyperh,3),digits=3,flag="#")

kable(select(output,type,position,Xcm,Ycm,Zcm,ssdlAxisAirKermaRatemGyperh))

```

```{r positions-fig, eval=TRUE, echo=FALSE}

g=ggplot(fullsetupmaster,aes(x=(left+right)/2,y=(bottom+top)/2,color=as.factor(front)))

g+facet_grid(~front,labeller="label_both")+geom_vline(xintercept=0,color="blue",alpha=0.5)+geom_hline(yintercept=78,color="red",alpha=0.5)+geom_hline(yintercept=72.25,color="darkgreen",alpha=0.5)+geom_errorbar(aes(ymin=bottom,ymax=top),width=min(fullsetupmaster$xcm))+geom_errorbarh(aes(xmin=left,xmax=right),height=min(fullsetupmaster$ycm))+ylim(0,294)+xlim(-150,150)+coord_fixed()+xlab("Xcm")+ylab("Ycm")+theme_minimal()+theme(legend.position="none")
### NB ### can include positions of nanodots on this image and grid on front and back planes

```
Fig: Positions of setups in the field. The intersection between the vertical blue and horizonthal green lines shows the location of the central field axis. The intersection between the vertical blue and horizonthal red lines show the location of the SSDL-defined field axis.

### Rotations and exposure times

There were a total of `r count(setuprotations)` rotations in this experiment. A rotation comprises the set of successive exposure times for which the whole setup remains exactly the same over the full exposure room. 

```{r rotations, eval=TRUE, echo=FALSE}

kable(select(count(fullsetupmaster,rotation,rotationstart,rotationstop,rotationtime),rotation,rotationstart,rotationstop,rotationtime))

```

### Minimum, maximum and average whole-setup absorbed dose rates and accumulated absorbed doses

Setups received the following accumulated whole-setup absorbed doses (accumulated_Gy), at the following average (avg_mGyperh), minimum (min_mGyperh) and maximum (max_mGyperh) whole-setup absorbed dose rates.

```{r fulldoses, eval=TRUE, echo=FALSE}

fulldoses=ungroup(summarise(group_by(fullsetupmaster,id,front,materials,absorbedDoseRateToWhat),accumulated_Gy=signif(sum(wholesetupAbsorbedDoseGy),2),accumulated_time=signif(as.numeric(sum(rotationtime),unit="days"),3),avg_mGyperh=signif(sum(wholesetupAbsorbedDoseGy)/as.numeric(sum(rotationtime),unit="hours")*1000,2),min_mGyperh=signif(min(wholesetupAbsorbedDoseRatemGyperh),2),max_mGyperh=signif(max(wholesetupAbsorbedDoseRatemGyperh),2)))

fulldoses=arrange(fulldoses,desc(accumulated_Gy))
fulldosesout=fulldoses
fulldosesout$numeric_accumulated_Gy=fulldosesout$accumulated_Gy
fulldosesout$accumulated_Gy=formatC(fulldosesout$accumulated_Gy,digits=2,flag="#")
fulldosesout$avg_mGyperh=formatC(fulldosesout$avg_mGyperh,digits=2,flag="#")
fulldosesout$min_mGyperh=formatC(fulldosesout$min_mGyperh,digits=2,flag="#")
fulldosesout$max_mGyperh=formatC(fulldosesout$max_mGyperh,digits=2,flag="#")

kable(select(arrange(fulldosesout,desc(numeric_accumulated_Gy)),id,accumulated_Gy,absorbedDoseRateToWhat,avg_mGyperh,min_mGyperh,max_mGyperh))

```

You can report information from this table in your work e.g. as:

Setup `r fulldosesout[1,1]` received an accumulated whole-setup absorbed dose to `r fulldosesout[1,4]` of `r fulldosesout[1,5]` Gy over `r fulldosesout[1,6]` days at an average whole-setup absorbed dose rate of `r fulldosesout[1,7]` mGy/h (range from `r fulldosesout[1,8]` mGy/h to `r fulldosesout[1,9]` mGy/h).


```{r fulldoses-fig-accumulated, eval=TRUE, echo=FALSE}

g=ggplot(data=arrange(fulldoses,desc(accumulated_Gy)),aes(x=fct_inorder(id),color=as.factor(front)))

g+facet_grid(~front,labeller="label_both")+geom_point(aes(y=accumulated_Gy),size=3)+xlab("setup id")+ylab("accumulated whole-setup absorbed dose [Gy]")+theme_minimal()+theme(legend.position="none",axis.text.x=element_text(angle = 90))

```
Fig: Accumulated whole-setup absorbed dose per setup.


```{r fulldoses-fig-accumulated-log, eval=TRUE, echo=FALSE}

g+facet_grid(~front,labeller="label_both")+geom_point(aes(y=accumulated_Gy),size=3)+scale_y_log10()+xlab("setup id")+ylab("accumulated whole-setup absorbed dose [Gy]")+theme_minimal()+theme(legend.position="none",axis.text.x=element_text(angle = 90))

```
Fig: Accumulated whole-setup absorbed dose per setup with a logarithmic y-axis.


```{r fulldoses-fig-avg, eval=TRUE, echo=FALSE}

g=ggplot(data=arrange(fulldoses,desc(accumulated_Gy)),aes(x=fct_inorder(id),color=as.factor(front)))

g+facet_grid(~front,labeller="label_both")+geom_errorbar(aes(ymin=min_mGyperh,ymax=max_mGyperh),size=1,alpha=0.5)+geom_point(aes(y=avg_mGyperh),size=3)+xlab("setup id")+ylab("average whole-setup absorbed dose rate [mGy/h]")+theme_minimal()+theme(legend.position="none",axis.text.x=element_text(angle = 90))

```
Fig: Average, minimum and maximum whole-setup absorbed dose rates per setup.


```{r fulldoses-fig-avg-log, eval=TRUE, echo=FALSE}

g+facet_grid(~front,labeller="label_both")+geom_errorbar(aes(ymin=min_mGyperh,ymax=max_mGyperh),size=1,alpha=0.5)+geom_point(aes(y=avg_mGyperh),size=3)+scale_y_log10()+xlab("setup id")+ylab("average whole-setup absorbed dose rate [mGy/h]")+theme_minimal()+theme(legend.position="none",axis.text.x=element_text(angle = 90))

```
Fig: Average, minimum and maximum whole-setup absorbed dose rates per setup with a logarithmic y-axis.

### Appendix (WIP): Raw dose rates and total doses per position and rotation

Each experimental unit had the following positions per rotation, were exposed at each position to the following dose rates, and received for each rotation the following total doses (for dose rate quantities and units, see table below):


```{r subsetdoses, eval=TRUE, echo=FALSE}

kable(select(count(fullsetupmaster,id,type,rotation,position,wholesetupAbsorbedDoseRatemGyperh,wholesetupAbsorbedDoseGy),id,type,rotation,position,wholesetupAbsorbedDoseRatemGyperh,wholesetupAbsorbedDoseGy))

```



### Appendix (WIP): Measured doses and validation of simulated doses

```{r nano, eval=TRUE, echo=FALSE}

g=ggplot(data=fullnanodotmaster,aes(x=ssdlAxisAirKermaRatemGyperh,y=readingrate))

g+geom_point()+geom_line(data=as_tibble(min(fullnanodotmaster$readingrate):max(fullnanodotmaster$readingrate)),aes(x=value,y=value),color="red")+scale_y_log10()+scale_x_log10()+theme_minimal()


g=ggplot(data=arrange(fullnanodotmaster,Zcm+zcm,Ycm+ycm,Xcm+xcm),aes(y=readingrate))

g+geom_line(data=as_tibble(min(fullnanodotmaster$readingrate):max(fullnanodotmaster$readingrate)),aes(x=value,y=value),color="red")+geom_point(aes(x=arrange(airkermaratesup,iZ,iY,iX)$wkerma))+geom_point(aes(x=arrange(airkermaratesdown,iZ,iY,iX)$wkerma))

```

```{r old, eval=FALSE, echo=FALSE}

#g=ggplot(fullsetupmaster,aes(x=(left+right)/2,y=(bottom+top)/2,color=as.factor(front)))

#g+facet_grid(~front)+geom_vline(xintercept=0,color="coral")+geom_hline(yintercept=78,color="coral")+geom_errorbar(aes(ymin=bottom,ymax=top),width=min(fullsetupmaster$xcm))+geom_errorbarh(aes(xmin=left,xmax=right),height=min(fullsetupmaster$ycm))+coord_fixed()+ylim(0,294)+theme_minimal()+theme(legend.position="none")
### NB ### can include positions of nanodots on this image and grid on front and back planes

g=ggplot(data=fullnanodotmaster)
g+geom_point(aes(x=Zcm+zcm,y=reading,color=as.factor(Zcm)))+scale_y_log10()+theme_minimal()



### NB ### include in this plot the air kerma rates on the central field axis
### NB ### if the quantity is air kerma rate

### NB ### add plot of simulated versus measured air kerma rates

```